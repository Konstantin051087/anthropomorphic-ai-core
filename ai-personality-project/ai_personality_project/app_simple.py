"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
"""

from flask import Flask, request, jsonify
from ai_personality_project.ai_core import AICore
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI
ai_core = AICore()

@app.before_first_request
def initialize_ai():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ"""
    try:
        ai_core.initialize()
        logger.info("‚úÖ AI Core –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI Core: {e}")

@app.route('/')
def home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return jsonify({
        'message': 'üé≠ AI Personality Project - Simplified API',
        'status': 'active',
        'version': '1.0.0'
    })

@app.route('/health')
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"""
    return jsonify({
        'status': 'healthy',
        'ai_initialized': ai_core._initialized
    })

@app.route('/chat', methods=['POST'])
def chat():
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —á–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    try:
        data = request.json
        
        if not data or 'message' not in data:
            return jsonify({
                'success': False,
                'error': '–ü–∞—Ä–∞–º–µ—Ç—Ä "message" –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
            }), 400
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        persona_id = data.get('persona_id', 1)
        
        result = ai_core.process_interaction(data['message'], persona_id)
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —á–∞—Ç–µ: {e}")
        return jsonify({
            'success': False,
            'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        }), 500

@app.route('/personas', methods=['GET'])
def get_personas():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
    try:
        personas = ai_core.persona_manager.list_personas()
        return jsonify({
            'success': True,
            'personas': personas
        })
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {e}")
        return jsonify({
            'success': False,
            'error': str(e)
        }), 500

if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    ai_core.initialize()
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è AI Personality Project...")
    print("üìç –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000")
    
    app.run(
        host='0.0.0.0',
        port=5000,
        debug=True
    )