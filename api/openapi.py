"""
–ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenAPI –¥–ª—è Anthropomorphic AI API
"""

def customize_openapi(app):
    """
    –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è OpenAPI –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    """
    def custom_openapi():
        if app.openapi_schema:
            return app.openapi_schema
        
        from fastapi.openapi.utils import get_openapi
        
        openapi_schema = get_openapi(
            title="Anthropomorphic AI API",
            version="1.0.0",
            description="""
            ## Anthropomorphic AI System API
            
            –ü–æ–ª–Ω—ã–π API –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–Ω—Ç—Ä–æ–ø–æ–º–æ—Ä—Ñ–Ω–æ–π AI —Å–∏—Å—Ç–µ–º–æ–π.
            
            ### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
            - üí¨ –ß–∞—Ç —Å AI —Å–∏—Å—Ç–µ–º–æ–π
            - üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã  
            - üòä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º AI
            - üß† –†–∞–±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é —Å–∏—Å—Ç–µ–º—ã
            - üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ AI
            
            ### –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:
            - `POST /api/v1/chat` - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ —á–∞—Ç
            - `GET /api/v1/state` - –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
            - `POST /api/v1/mood/update` - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            - `POST /api/v1/memory/store` - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å
            - `POST /api/v1/memory/recall` - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ –ø–∞–º—è—Ç–∏
            - `POST /api/v1/personality/update` - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
            - `GET /api/v1/health` - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
            """,
            routes=app.routes,
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
        openapi_schema["tags"] = [
            {
                "name": "chat",
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ —Å AI"
            },
            {
                "name": "system",
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π"
            },
            {
                "name": "mood", 
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è AI"
            },
            {
                "name": "memory",
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"
            },
            {
                "name": "personality",
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ –ª–∏—á–Ω–æ—Å—Ç–∏ AI"
            },
            {
                "name": "health",
                "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è"
            }
        ]
        
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ç–µ–≥–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º
        for path in openapi_schema["paths"]:
            if "/chat" in path:
                for method in openapi_schema["paths"][path]:
                    openapi_schema["paths"][path][method]["tags"] = ["chat"]
            elif "/state" in path or "/health" in path:
                for method in openapi_schema["paths"][path]:
                    openapi_schema["paths"][path][method]["tags"] = ["system", "health"]
            elif "/mood" in path:
                for method in openapi_schema["paths"][path]:
                    openapi_schema["paths"][path][method]["tags"] = ["mood"]
            elif "/memory" in path:
                for method in openapi_schema["paths"][path]:
                    openapi_schema["paths"][path][method]["tags"] = ["memory"]
            elif "/personality" in path:
                for method in openapi_schema["paths"][path]:
                    openapi_schema["paths"][path][method]["tags"] = ["personality"]
        
        app.openapi_schema = openapi_schema
        return app.openapi_schema
    
    return custom_openapi