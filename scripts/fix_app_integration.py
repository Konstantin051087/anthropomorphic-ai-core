# scripts/fix_app_integration.py
#!/usr/bin/env python3
"""
–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø ROUTER –í APP.PY
"""

from pathlib import Path
import re

def fix_app_integration():
    app_file = Path("api/app.py")
    
    if not app_file.exists():
        print("‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    content = app_file.read_text()
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï APP.PY")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–º–ø–æ—Ä—Ç–∞ router
    if "from api.routes import router" not in content:
        print("‚ùå –ò–º–ø–æ—Ä—Ç router –Ω–µ –Ω–∞–π–¥–µ–Ω")
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ api
        lines = content.split('\n')
        for i, line in enumerate(lines):
            if "from api." in line or "from .routes" in line:
                # –£–∂–µ –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∏–º–ø–æ—Ä—Ç –∏–∑ api, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                continue
            if "from fastapi import" in line or "import FastAPI" in line:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤ FastAPI
                lines.insert(i + 1, "from api.routes import router")
                break
        else:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
            for i, line in enumerate(lines):
                if line.startswith('from ') or line.startswith('import '):
                    continue
                else:
                    lines.insert(i, "from api.routes import router")
                    break
        
        content = '\n'.join(lines)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç router")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è router
    if "app.include_router(router" not in content:
        print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ router –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è middleware)
        lines = content.split('\n')
        
        # –ò—â–µ–º –±–ª–æ–∫ –ø–æ—Å–ª–µ middleware
        middleware_found = False
        insert_position = -1
        
        for i, line in enumerate(lines):
            if "app.middleware" in line or "CORS" in line:
                middleware_found = True
            if middleware_found and line.strip() == "":
                insert_position = i
                break
        
        if insert_position == -1:
            # –ò—â–µ–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è app
            for i, line in enumerate(lines):
                if "app = FastAPI(" in line:
                    insert_position = i + 1
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ app
                    while insert_position < len(lines) and (lines[insert_position].startswith(' ') or lines[insert_position].startswith(')') or lines[insert_position].strip() == ''):
                        insert_position += 1
                    break
        
        if insert_position != -1:
            lines.insert(insert_position, "\n# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API routes")
            lines.insert(insert_position + 1, "app.include_router(router, prefix=\"/api/v1\")")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ router —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api/v1")
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ —Å–æ–±—ã—Ç–∏—è–º–∏ startup/shutdown
            for i, line in enumerate(lines):
                if "@app.on_event" in line or "startup" in line:
                    lines.insert(i, "app.include_router(router, prefix=\"/api/v1\")")
                    lines.insert(i, "# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API routes")
                    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ router –ø–µ—Ä–µ–¥ —Å–æ–±—ã—Ç–∏—è–º–∏")
                    break
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü, –ø–µ—Ä–µ–¥ if __name__ ...
                for i, line in enumerate(lines):
                    if 'if __name__ == "__main__":' in line:
                        lines.insert(i, "\n# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API routes")
                        lines.insert(i + 1, "app.include_router(router, prefix=\"/api/v1\")")
                        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ router –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
                        break
        
        content = '\n'.join(lines)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    app_file.write_text(content)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if "from api.routes import router" in content and "app.include_router(router" in content:
        print("üéâ APP.PY –£–°–ü–ï–®–ù–û –ò–°–ü–†–ê–í–õ–ï–ù!")
        print("üìã –ü–†–û–í–ï–†–ö–ê:")
        print("   ‚úÖ –ò–º–ø–æ—Ä—Ç router: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ router: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        print("   ‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å: /api/v1")
        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å app.py –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        return False

if __name__ == "__main__":
    success = fix_app_integration()
    if success:
        print("\nüîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã —Å–Ω–æ–≤–∞:")
        print("   python api/app.py")
        print("   python scripts/comprehensive_project_test_fixed.py")
    else:
        print("\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ app.py")